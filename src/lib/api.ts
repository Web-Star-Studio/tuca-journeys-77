
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
// Fix the import path for the Database type
import type { Database } from '../integrations/supabase/types';

const SUPABASE_URL = "https://xsctqejremuwmktmchef.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhzY3RxZWpyZW11d21rdG1jaGVmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM2NzEzMDEsImV4cCI6MjA1OTI0NzMwMX0.2IaG53q-EuHkupqC3qvOSSzf7wMVPKpYWoJsLt0susU";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Export the isUserPartner function for use in the UserDropdownContent component
export const isUserPartner = async (userId: string): Promise<boolean> => {
  if (!userId) return false;
  
  try {
    const { data, error } = await supabase
      .from('partners')
      .select('id')
      .eq('user_id', userId)
      .single();
  
    if (error && error.code !== 'PGRST116') { // PGRST116 is the error for "no rows returned"
      console.error('Error checking if user is partner:', error);
      throw error;
    }
  
    return !!data;
  } catch (error) {
    console.error('Error checking if user is partner:', error);
    return false;
  }
};
